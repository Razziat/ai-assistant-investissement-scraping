2024-04-18 11:24:58,982: asyncio: INFO: [MLTrader] Executing the initialize lifecycle method
2024-04-18 11:25:00,748: root: INFO: Current backtesting datetime 2023-01-03 08:30:00-05:00
2024-04-18 11:25:00,748: asyncio: INFO: [MLTrader] Executing the before_market_opens lifecycle method
2024-04-18 11:25:00,748: root: INFO: Current backtesting datetime 2023-01-03 09:30:00-05:00
2024-04-18 11:25:00,748: asyncio: INFO: [MLTrader] Executing the before_starting_trading lifecycle method
2024-04-18 11:25:00,748: asyncio: INFO: [MLTrader] [34mExecuting the on_trading_iteration lifecycle method at 2024-04-18 11:25:00[0m
2024-04-18 11:25:00,799: asyncio: ERROR: [MLTrader] maximum recursion depth exceeded
2024-04-18 11:25:00,998: asyncio: ERROR: [MLTrader] Traceback (most recent call last):
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\strategies\strategy_executor.py", line 919, in run
    self._run_trading_session()
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\strategies\strategy_executor.py", line 867, in _run_trading_session
    self._on_trading_iteration()
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\strategies\strategy_executor.py", line 262, in func_output
    result = func_input(self, *args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\strategies\strategy_executor.py", line 286, in func_output
    result = func_input(self, *args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\strategies\strategy_executor.py", line 397, in _on_trading_iteration
    raise e
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\strategies\strategy_executor.py", line 369, in _on_trading_iteration
    on_trading_iteration()
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\tools\decorators.py", line 62, in func_output
    frame, result = call_function_get_frame(func_input, *args, **kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\tools\decorators.py", line 30, in call_function_get_frame
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "D:\investissement\scrapping-assistant-investissement\src\mltrader\tradingbotv2.py", line 79, in on_trading_iteration
    data = self.fetch_data(self.symbol, start_date.isoformat(), end_date.isoformat(), '1D')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\investissement\scrapping-assistant-investissement\src\mltrader\tradingbotv2.py", line 46, in fetch_data
    data = self.fetch_data(self.symbol, start_date.isoformat(), end_date.isoformat())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\investissement\scrapping-assistant-investissement\src\mltrader\tradingbotv2.py", line 46, in fetch_data
    data = self.fetch_data(self.symbol, start_date.isoformat(), end_date.isoformat())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\investissement\scrapping-assistant-investissement\src\mltrader\tradingbotv2.py", line 46, in fetch_data
    data = self.fetch_data(self.symbol, start_date.isoformat(), end_date.isoformat())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 2984 more times]
  File "D:\investissement\scrapping-assistant-investissement\src\mltrader\tradingbotv2.py", line 44, in fetch_data
    start_date = self.get_datetime() - Timedelta(days=180)
                 ^^^^^^^^^^^^^^^^^^^
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\strategies\strategy.py", line 2411, in get_datetime
    return self.broker.data_source.get_datetime(adjust_for_delay=adjust_for_delay)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\investissement\scrapping-assistant-investissement\crew\Lib\site-packages\lumibot\backtesting\backtesting_broker.py", line 32, in __getattribute__
    def __getattribute__(self, name):
    
RecursionError: maximum recursion depth exceeded

2024-04-18 11:25:00,998: asyncio: INFO: [MLTrader] Executing the on_bot_crash event method
2024-04-18 11:25:00,998: root: INFO: Backtesting finished
2024-04-18 11:25:01,981: asyncio: WARNING: [MLTrader] Cannot plot returns because the strategy returns are missing
2024-04-18 11:25:02,098: asyncio: WARNING: [MLTrader] Cannot create a tearsheet because the strategy returns are missing
2024-04-18 11:25:02,098: backtest_stats: INFO: Backtest took 0:00:03.115857 for a speed of 0.000
